{"version":3,"sources":["application.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"application.js","sourcesContent":["var HelloWorld = React.createClass({\n    render: function() {\n\n        return (\n            <div>\n                <h1>Cool Stuff</h1>\n                <h2>Hmm</h2>\n                <p>Fucking cool!</p>\n                <p>Hier könnten dann jQuery AJAX Abfragen die einzelnen Komponenten\n                    stetig aktualisieren und somit ein gut zu überblickendes\n                    Softwarepaket erlauben (Backend). Gleichzeitig wäre es auch\n                    möglich, auf unübersichtlichen jQuery Code zu verzeichten.\n                    Einzig die Einbindung in Laravel ist noch problematisch.\n                    Darüber hinaus ist mir auch nicht ganz klar, wie ich z.B.\n                    das Eventbinding des flowplayers in React umsetzen kann.\n                    Vielleicht ist hier ja aber auch einfach jQuery leichter. Ich\n                    gehe nämlich davon aus, dass ich andernfalls den gesamten\n                    Player als interaktive Komponente betrachten müsste.\n                </p>\n            </div>\n        );\n\n    }\n});\n\nReact.render(<HelloWorld />, document.getElementById(\"react\"));\n"],"sourceRoot":"/source/"}